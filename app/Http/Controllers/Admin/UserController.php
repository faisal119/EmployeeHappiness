<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\Admin;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\DB;

class UserController extends Controller
{
    public function index()
    {
        $admins = Admin::all();
        return view('admin.users.index', compact('admins'));
    }

    public function create()
    {
        return view('admin.users.create');
    }

    public function store(Request $request)
    {
        $request->validate([
            'name' => 'required',
            'email' => 'required|email|unique:admins',
            'password' => 'required|min:6',
        ]);

        Admin::create([
            'name' => $request->name,
            'email' => $request->email,
            'password' => Hash::make($request->password),
        ]);

        return redirect()->route('admin.users.index')->with('success', 'ุชู ุฅุถุงูุฉ ุงููุดุฑู ุจูุฌุงุญ');
    }

    public function edit(Admin $admin)
    {
        return view('admin.users.edit', compact('admin'));
    }

    public function update(Request $request, Admin $admin)
    {
        try {
            // ุงูุชุฃูุฏ ูู ูุฌูุฏ ุงููุดุฑู
            if (!$admin || !$admin->exists) {
                Log::error('โ ุงููุดุฑู ุบูุฑ ููุฌูุฏ:', [
                    'request_data' => $request->all()
                ]);
                return redirect()->back()
                    ->with('error', 'ุงููุดุฑู ุบูุฑ ููุฌูุฏ')
                    ->withInput();
            }

            Log::info('๐ข ุจุฏุงูุฉ ุชุญุฏูุซ ุจูุงูุงุช ุงููุดุฑู:', [
                'admin_id' => $admin->id,
                'admin_email' => $admin->email,
                'has_password' => $request->filled('password'),
                'request_data' => $request->except(['password']) // ูุง ูููู ุจุชุณุฌูู ูููุฉ ุงููุฑูุฑ ูู ุงูุณุฌูุงุช
            ]);

            // ุงูุชุญูู ูู ุฃู ุงููุณุชุฎุฏู ุงูุญุงูู ูุง ูููู ุจุชุนุฏูู ููุณู
            if ($admin->id === auth()->id()) {
                Log::warning('โ ูุญุงููุฉ ุชุนุฏูู ุงูุญุณุงุจ ุงูุดุฎุตู ูู ุตูุญุฉ ุงููุดุฑููู:', [
                    'admin_id' => $admin->id
                ]);
                return redirect()->back()->with('error', 'ูุง ููููู ุชุนุฏูู ุญุณุงุจู ุงูุฎุงุต ูู ููุง');
            }

            // ุงูุชุญูู ูู ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
            if ($request->email !== $admin->email) {
                $emailExists = Admin::where('email', $request->email)
                    ->where('id', '!=', $admin->id)
                    ->exists();
                
                if ($emailExists) {
                    Log::warning('โ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ูุณุชุฎุฏู ูู ูุจู:', [
                        'email' => $request->email,
                        'admin_id' => $admin->id,
                        'current_email' => $admin->email
                    ]);
                    return redirect()->back()
                        ->with('error', 'ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ูุณุชุฎุฏู ูู ูุจู ูุดุฑู ุขุฎุฑ')
                        ->withInput();
                }
            }

            // ุงูุชุญูู ูู ุงูุจูุงูุงุช
            $validator = \Illuminate\Support\Facades\Validator::make($request->all(), [
                'name' => 'required|string|max:255',
                'email' => 'required|email|max:255',
                'password' => 'nullable|string|min:6',
            ]);

            if ($validator->fails()) {
                Log::warning('โ ูุดู ุงูุชุญูู ูู ุงูุจูุงูุงุช:', [
                    'admin_id' => $admin->id,
                    'errors' => $validator->errors()->toArray()
                ]);
                return redirect()->back()
                    ->withErrors($validator)
                    ->withInput();
            }

            DB::beginTransaction();

            try {
                $oldEmail = $admin->email;
                $admin->name = $request->name;
                $admin->email = $request->email;
                
                if ($request->filled('password')) {
                    Log::info('๐ ุชุญุฏูุซ ูููุฉ ุงููุฑูุฑ ูููุดุฑู:', [
                        'admin_id' => $admin->id
                    ]);
                    $admin->password = Hash::make($request->password);
                }

                $admin->save();

                Log::info('โ ุชู ุชุญุฏูุซ ุจูุงูุงุช ุงููุดุฑู ุจูุฌุงุญ:', [
                    'admin_id' => $admin->id,
                    'name' => $admin->name,
                    'old_email' => $oldEmail,
                    'new_email' => $admin->email,
                    'password_updated' => $request->filled('password')
                ]);

                DB::commit();

                return redirect()->route('admin.users.index')
                    ->with('success', 'ุชู ุชุญุฏูุซ ุจูุงูุงุช ุงููุดุฑู ุจูุฌุงุญ');

            } catch (\Exception $e) {
                DB::rollBack();
                Log::error('โ ุฎุทุฃ ูู ุชุญุฏูุซ ุจูุงูุงุช ุงููุดุฑู:', [
                    'error' => $e->getMessage(),
                    'admin_id' => $admin->id,
                    'trace' => $e->getTraceAsString()
                ]);
                throw $e;
            }

        } catch (\Exception $e) {
            Log::error('โ ุฎุทุฃ ูู ุชุญุฏูุซ ุงููุดุฑู:', [
                'error' => $e->getMessage(),
                'admin_id' => isset($admin) ? $admin->id : null,
                'trace' => $e->getTraceAsString()
            ]);
            return redirect()->back()
                ->with('error', 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุญุฏูุซ ุจูุงูุงุช ุงููุดุฑู')
                ->withInput();
        }
    }

    public function destroy($id)
    {
        Log::info('ูุญุงููุฉ ุญุฐู ุงููุดุฑู:', ['admin_id' => $id]);
        
        try {
            DB::beginTransaction();
            
            $admin = Admin::findOrFail($id);
            
            // ุงูุชุญูู ูู ุฃู ุงููุณุชุฎุฏู ูุง ูุญุงูู ุญุฐู ููุณู
            if ($admin->id === auth()->id()) {
                Log::warning('ูุญุงููุฉ ุญุฐู ุงูููุณ:', ['admin_id' => $id]);
                return redirect()->back()->with('error', 'ูุง ููููู ุญุฐู ุญุณุงุจู ุงูุฎุงุต');
            }

            // ุงูุชุญูู ูู ุนุฏุฏ ุงููุดุฑููู
            if (Admin::count() <= 1) {
                Log::warning('ูุญุงููุฉ ุญุฐู ุงููุดุฑู ุงูุฃุฎูุฑ');
                return redirect()->back()->with('error', 'ูุง ูููู ุญุฐู ุงููุดุฑู ุงูุฃุฎูุฑ');
            }

            // ุญุฐู ุงููุดุฑู
            $admin->delete();
            
            DB::commit();
            
            Log::info('ุชู ุญุฐู ุงููุดุฑู ุจูุฌุงุญ:', ['admin_id' => $id]);
            
            return redirect()->route('admin.users.index')->with('success', 'ุชู ุญุฐู ุงููุดุฑู ุจูุฌุงุญ');
            
        } catch (\Exception $e) {
            DB::rollBack();
            
            Log::error('ุฎุทุฃ ูู ุญุฐู ุงููุดุฑู:', [
                'error' => $e->getMessage(),
                'admin_id' => $id,
                'trace' => $e->getTraceAsString()
            ]);
            
            return redirect()->back()->with('error', 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุญุฐู ุงููุดุฑู');
        }
    }
} 